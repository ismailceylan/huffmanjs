(function(s,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(s=typeof globalThis<"u"?globalThis:s||self,f(s.huffmanjs={}))})(this,function(s){"use strict";function f(n){const e={};let o="";for(const t of n)o+=t.charCodeAt(0).toString(2).padStart(8,"0");for(let t=0;t<o.length;t+=32){const r=o.slice(t,t+16),i=o.slice(t+16,t+32),c=parseInt(r,2),d=i.replace(/^0*(.*)/,"$1");e[d]=c}return e}function m(n){if(/[0-7]/.test(n[0]))throw new Error("Invalid padding data!");return[parseInt(n[0].charCodeAt(0)),n.slice(1)]}function h(n){let e="";for(const r in n){const i=n[r],c=16-i.length%16,d=i.padStart(i.length+c,"0"),j=parseInt(r).toString(2).padStart(16,"0");e+=j+d}const o=a(e)[0],t=a(o.length.toString(2).padStart(16,"0"))[0];return[o,t]}function b(n){const e={};o(n[0]);function o(t,r="1"){t!==null&&(t.char!==null&&(e[t.char]=r),o(t.left,r+"1"),o(t.right,r+"0"))}return e}function w(n){const e={};for(let o=0;o<n.length;o++){const t=n[o];e[t]?e[t]++:e[t]=1}return e}function S(n,e){let o="";for(const t of n)o+=e[t];return o}const l="Ñur!",u="ÿÿ";function C([n,e],o){const[t,r]=h(o);return[l,String.fromCharCode(e),t,u,n].join("")}function y(n){return B(k(n))}function k(n){const e={};if(n.slice(0,l.length)!==l)throw new Error("Unknown file format!");const o=n.indexOf(u);if(o===-1)throw new Error("Meta ending not found!");let t=n.slice(l.length,o);return[e.padEnd,t]=m(t),e.bitmap=f(t),e.raw=n.slice(o+u.length),e}function E(n){n=n.split("").map(c=>c.charCodeAt(0));const e=w(n),o=q(e),t=b(o),r=S(n,t),i=a(r);return[C(i,t),t]}function q(n){const e=Object.keys(n).map(o=>new g(o,n[o])).sort(p);for(;e.length>1;){const o=e.shift(),t=e.shift(),r=new g(null,o.freq+t.freq);r.left=o,r.right=t,e.push(r),e.sort(p)}return e}function a(n){const e=[];let o=0;for(let t=0;t<n.length;t+=8){let r=n.slice(t,t+8);r.length<8&&(o=8-r.length,r=r.padEnd(8,"0"));const i=parseInt(r,2),c=String.fromCharCode(i);e.push(c)}return[e.join(""),o]}function B(n){let e="";for(const r of n.raw)e+=r.charCodeAt(0).toString(2).padStart(8,"0");n.padEnd>0&&(e=e.slice(0,-n.padEnd));let o=[],t="";for(const r of e){t+=r;const i=n.bitmap[t];i!==void 0&&(o.push(String.fromCharCode(i)),t="")}return o.join("")}function p(n,e){return n.freq-e.freq}class g{constructor(e,o){this.char=e,this.freq=o,this.left=null,this.right=null}}s.compress=E,s.decompress=y,s.serializeHuffmanCode=h,s.unserializeHuffmanCode=f,Object.defineProperty(s,Symbol.toStringTag,{value:"Module"})});
